DISTRO_VERSION = "next+snapshot-${DATE}"
MAINTAINER = "Mentor Graphics Corporation <embedded_support@mentor.com>"
TARGET_VENDOR = "-mel"
SDK_VENDOR = "-melsdk"
SDK_VERSION := "${@'${DISTRO_VERSION}'.replace('snapshot-${DATE}','snapshot')}"
SDKPATH = "/opt/${DISTRO}/${SDK_VERSION}"

# Override poky defaults based on our needs. Removed ptest.
POKY_DEFAULT_DISTRO_FEATURES = "largefile opengl multiarch"
POKY_DEFAULT_EXTRA_RDEPENDS = ""
POKY_DEFAULT_EXTRA_RRECOMMENDS = ""

# We want media to auto-mount
DISTRO_EXTRA_RRECOMMENDS += "udev-extraconf"

# Paths
MELDIR ?= "${COREBASE}/.."

# Application Development Environment
ADE_PROVIDER ?= "Mentor Graphics Corporation"
ADE_SECTIONS = ""
ADE_SECTIONS_EXCLUDED = "locale"

DATETIME_SECS = "${@int(time.mktime(time.strptime('${DATETIME}', '%Y%m%d%H%M%S')))}"
ADE_VERSION ?= "${SDK_VERSION}.${DATETIME_SECS}"
ADE_IDENTIFIER ?= "${IMAGE_BASENAME}-${MACHINE}-${ADE_VERSION}"
ADE_IDENTIFIER_SUBDIR = "/ade-${ADE_IDENTIFIER}"
ADE_OUTPATH ?= "${DEPLOY_DIR_ADE}${ADE_IDENTIFIER_SUBDIR}"
ADE_PATH ?= "ade${ADE_IDENTIFIER_SUBDIR}/"
ADE_ARTIFACT_SUFFIX ?= ".${ADE_IDENTIFIER}"
ADE_SITENAME ?= "ADE for ${ADE_IDENTIFIER}"
ADE_TOP_CATEGORY ?= "${DISTRO_NAME} [${ADE_IDENTIFIER}]"

# Default image for our installers
RELEASE_IMAGE ?= "console-image"

# We split out the initramfs install script bits into
# core-image-minimal-install-initramfs, to keep core-image-minimal-initramfs
# as generic as possible, but image-live may well expect the install bits.
INITRD_IMAGE ?= "core-image-minimal-install-initramfs"

require conf/distro/include/mel-providers.conf
require conf/distro/include/mel-vardeps.conf

# Currently, we do not support CentOS 6 due to its lack of the needed python
# 2.7. We also do not support Debian, SUSE, or openSUSE at this time.
SANITY_TESTED_DISTROS = "\
    Ubuntu-14.04 \n\
    Ubuntu-12.04 \n\
"

# Forcibly silence PRINC warnings by killing PRINC
PRINC_mel = "0"

# Ensure we can fetch from private github repositories with https
FETCHCMD_wget += "--auth-no-challenge"

INHERIT_DISTRO ?= "debian devshell sstate license deploy-license-manifest"

# Support USER_FEATURES
INHERIT += "user_features"

# Do an up front type check to sanity check user configuration
INHERIT += "typecheck"

# Import oe.terminal to allow a type check of OE_TERMINAL
OE_IMPORTS += "oe.terminal"

# Restore any available saved headrevs
DUMP_HEADREVS_DB ?= '${MELDIR}/${MACHINE}/saved_persist_data.db'
INHERIT += "restore-dumped-headrevs"

# Warn if there are available update layers which are not included in the
# current configuration
INHERIT += "mentor-updates-check"

# Ensure we get both 32 and 64 bit pseudo on 64 bit hosts
NO32LIBS ?= "0"

# locales shouldn't be in lib32/lib64
localedir = "${exec_prefix}/lib/locale"

# Ensure that we implement shared state reuse handling for non-target recipes
require conf/distro/include/sstate.inc

# Ensure the emitted locale packages are in that section, so they can be
# easily excluded from the ADE (or categorized correctly, when included)
LOCALE_SECTION = "locale"

# Additional filesystem types, ade support
IMAGE_CLASSES += "image_types_uboot image_types_mentor image_types_wic ${ADE_IMAGE_CLASS}"

# If meta-mentor-private is available, pull in the populate-ade class
ADE_IMAGE_CLASS = "${@'populate_ade' if 'mentor-private' in '${BBFILE_COLLECTIONS}'.split() else ''}"

# Default to these image types
IMAGE_FSTYPES ?= "tar.bz2 ext3"
UBI_VOLNAME = "rootfs"

# Quadruple the normal. 'du' is not a good way to really see how much
# space will be needed and fails badly as the fs size grows.
IMAGE_ROOTFS_EXTRA_SPACE = "40960"

# Add systemd
VIRTUAL-RUNTIME_init_manager ?= "systemd"
VIRTUAL-RUNTIME_initscripts ?= ""
DISTRO_FEATURES_BACKFILL_CONSIDERED ?= "sysvinit"
DISTRO_FEATURES_append = " systemd"

# Remove .la files for packages, as they really aren't of much use. This is
# also needed for ADE construction to align with the Yocto SDK, though that
# could be handled via path exclusions with opkg-p2 as well.
DISTRO_FEATURES_BACKFILL_CONSIDERED += "libtool-garbage"
INHERIT += "libtool-garbage"

# We always want vfat support in our distro for external media
DISTRO_FEATURES_append = " vfat"

# Ensure fbset is in busybox configuration, and fbset-modes is included
PACKAGECONFIG_append_pn-busybox = " fbset"

# Ensure that we are not getting GUI for latencytop, as we don't want x11 to
# be pulled into our console image.
PACKAGECONFIG_pn-latencytop = ""

# Ensure that we are not getting GUI for sysprof, as we don't want x11 to
# be pulled into our console image.
PACKAGECONFIG_pn-sysprof = ""

# Since many embedded systems don't have non-root users, allow autospawn for
# root as well.
PACKAGECONFIG_append_pn-pulseaudio = " autospawn-for-root"

# Sane default locales for images
GLIBC_GENERATE_LOCALES ?= "en_US en_US.UTF-8"
IMAGE_LINGUAS ?= "en-us"

# We prefer busybox rather than tinylogin
VIRTUAL-RUNTIME_login_manager = "busybox"

# Use a local PR server by default
PRSERV_HOST ?= "localhost:0"

# Prefer the chkconfig C implementation of alternatives
VIRTUAL-RUNTIME_update-alternatives = "chkconfig-alternatives"
PREFERRED_PROVIDER_virtual/update-alternatives = "chkconfig-alternatives"
PACKAGECONFIG_remove_pn-opkg-utils = "update-alternatives"
PREFERRED_PROVIDER_virtual/update-alternatives-native = "chkconfig-alternatives-native"
PACKAGECONFIG_remove_pn-opkg-utils-native = "update-alternatives"
PREFERRED_PROVIDER_virtual/nativesdk-update-alternatives = "nativesdk-chkconfig-alternatives"
PACKAGECONFIG_remove_pn-nativesdk-opkg-utils = "update-alternatives"

# We want information about image contents
INHERIT += "buildhistory"
BUILDHISTORY_COMMIT ?= "1"

# Support for SOURCERY_VERSION_REQUIRED
require conf/distro/include/sourcery-version-check.inc

# Add symlink to ${KERNEL_IMGTYPE}
require conf/distro/include/kernel-link.inc

# Default to ipk packaging
PACKAGE_CLASSES ?= "package_ipk"

# LAYERDIRs for our layers, by name
INHERIT += "layerdirs"

# Layer name and path for the recipe
RECIPE_LAYERNAME = "${@bb.utils.get_file_layer('${FILE}', d) or 'UNKNOWN'}"
RECIPE_LAYERDIR = "${LAYERDIR_${RECIPE_LAYERNAME}}"
LAYERDIR_UNKNOWN = 'UNKNOWN'

# Support pulling downloads and sstate from inside individual layers. This
# will let us ship self contained layers to a release without risking file
# conflicts between them.
PREMIRRORS_prepend = "${@'.*://.*/.* file://${RECIPE_LAYERDIR}/downloads\n' if '${RECIPE_LAYERDIR}' != 'None' else ''}"
LAYER_SSTATE_MIRRORS = "${@" ".join('file://%s' % sl for sl in ('%s/sstate-cache' % l for l in '${BBLAYERS}'.split()) if os.path.exists(sl))}"
SSTATE_MIRROR_SITES_prepend = "${LAYER_SSTATE_MIRRORS} "

# Populate a tree of downloads organized by layer for archive-release
ARCHIVE_RELEASE_DL_TOPDIR ?= "${DEPLOY_DIR}/release-downloads"
DL_LICENSE_INCLUDE ?= "*"
INHERIT += "archive-release-downloads"
ARCHIVE_RELEASE_DL_DIR = "${ARCHIVE_RELEASE_DL_TOPDIR}/${RECIPE_LAYERNAME}"

# Defaults for meta-ti machines missing it, as some recipes require it
MACHINE_KERNEL_PR_beagleboard ?= "r1"

# We aren't as picky as poky, but we care about host user contamination
WARN_TO_ERROR_QA = "host-user-contaminated"

# Disable reliance upon upstream URIs, as we want our customers to be able to
# build without network connectivity
CONNECTIVITY_CHECK_URIS = ""

# Default to the Xorg X server
XSERVER ?= "\
    xserver-xorg \
    xf86-input-evdev \
    xf86-input-mouse \
    xf86-input-keyboard \
    xf86-video-fbdev \
"

# Package groups
FEATURE_PACKAGES_tools-benchmark ?= 'packagegroup-tools-benchmark'
FEATURE_PACKAGES_codebench-debug ?= 'gdbserver strace openssh-sftp-server'
FEATURE_PACKAGES_nas             ?= 'packagegroup-role-nas'
FEATURE_PACKAGES_print-server    ?= 'packagegroup-role-print-server'
FEATURE_PACKAGES_router          ?= "packagegroup-role-router"
FEATURE_PACKAGES_tools-audio     ?= "packagegroup-tools-audio"

# Analogous to the nfs-server group
FEATURE_PACKAGES_samba-server    ?= "samba swat"

require conf/distro/include/mel-versions.conf

# Sanely handle the GPLv3 gdbserver coming from external-sourcery-toolchain
require conf/distro/include/gdbserver-gplv3.inc

# Allow blacklisting recipes
INHERIT += "blacklist"

# Handle building blocks
require conf/blocks/bluetooth.conf
require conf/blocks/speech-synthesis.conf
require conf/blocks/speech-recognition.conf

# Handle Qt5 changes
include conf/distro/include/qt5-mel.conf

# SELinux Security Changes 
include conf/distro/include/mel-security.conf

# Mask out meta-ivi's connman, libpcap, and pulseaudio appends, as it makes it
# impossible to add bluetooth to its PACKAGECONFIG, so we need to undo the
# damage.
BBMASK ?= "(/meta-ivi/(recipes-multimedia/pulseaudio|recipes-connectivity/(connman|ofono|libpcap))/|/meta-ivi/recipes-multimedia/libtiff/|/meta-ivi/recipes-core-ivi/eglibc/|/meta-virtualization/recipes-kernel/linux/linux-yocto_3\.4)"

# Ensure we have the writable paths we need in a read-only rootfs
VOLATILE_BINDS_append = "\
    /var/volatile/root-home ${ROOT_HOME}\n\
    /var/volatile/media /media\n\
    /var/volatile/resolv.conf /etc/resolv.conf\n\
"

# Work around vars for the target leaking into natives
TARGET_LDFLAGS[unexport] = "1"
TARGET_CFLAGS[unexport] = "1"
TARGET_CPPFLAGS[unexport] = "1"
TARGET_CXXFLAGS[unexport] = "1"

# Drop gdb-7.7 bbappends from meta-xilinx
BBMASK .= "|/meta-xilinx/recipes-devtools/gdb/gdb.*_7\.7%.*\.bbappend"

# We need vfat support for PPC targets as well
MACHINE_FEATURES_append_powerpc = " vfat"

# Explicitly remove the proprietary stuff
MACHINE_HWCODECS = ""

# Changing IMAGE_FSTYPES should re-run do_rootfs. This belongs upstream.
do_rootfs[vardeps] += "IMAGE_FSTYPES"

# Work around missing vardep bug in bitbake
sstate_stage_all[vardeps] += "sstate_stage_dirs"
